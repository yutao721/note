(window.webpackJsonp=window.webpackJsonp||[]).push([[40],{384:function(e,t,r){"use strict";r.r(t);var a=r(43),s=Object(a.a)({},(function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[r("h2",{attrs:{id:"_1-一个完整的webpack配置代理代码"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-一个完整的webpack配置代理代码"}},[e._v("#")]),e._v(" 1. 一个完整的webpack配置代理代码")]),e._v(" "),r("p",[e._v("设置代理的前提条件："),r("br"),e._v("\n1、需要使用本地开发插件：webpack-dev-server。"),r("br"),e._v("\n2、webpack-dev-server使用的是http-proxy-middleware来实现跨域代理的。"),r("br"),e._v("\n3、webpack版本： 3.0、4.0亲测有效")]),e._v(" "),r("p",[e._v("一个webpack配置信息：")]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("module.exports = {\n  //...\n  devServer: {\n    proxy: {\n      '/api': {\n        target: 'http://www.baidu.com/',\n        pathRewrite: {'^/api' : ''},\n        changeOrigin: true,     // target是域名的话，需要这个参数，\n        secure: false,          // 设置支持https协议的代理\n      },\n      '/api2': {\n          .....\n      }\n    }\n  }\n};\n")])])]),r("h2",{attrs:{id:"_2-配置中主要的参数说明"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-配置中主要的参数说明"}},[e._v("#")]),e._v(" 2. 配置中主要的参数说明")]),e._v(" "),r("h3",{attrs:{id:"_2-1-api"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-api"}},[e._v("#")]),e._v(" 2.1 '/api'")]),e._v(" "),r("p",[e._v("捕获API的标志，如果API中有这个字符串，那么就开始匹配代理，\n比如API请求/api/users, 会被代理到请求 http://www.baidu.com/api/users 。")]),e._v(" "),r("h3",{attrs:{id:"_2-2-target"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-target"}},[e._v("#")]),e._v(" 2.2 target")]),e._v(" "),r("p",[e._v("代理的API地址，就是需要跨域的API地址。\n地址可以是域名,如：http://www.baidu.com\n也可以是IP地址：http://127.0.0.1:3000\n如果是域名需要额外添加一个参数changeOrigin: true，否则会代理失败。")]),e._v(" "),r("h3",{attrs:{id:"_2-3-pathrewrite"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-pathrewrite"}},[e._v("#")]),e._v(" 2.3 pathRewrite")]),e._v(" "),r("p",[e._v("路径重写，也就是说会修改最终请求的API路径。\n比如访问的API路径：/api/users,\n设置pathRewrite: {'^/api' : ''},后，\n最终代理访问的路径：http://www.baidu.com/users，\n这个参数的目的是给代理命名后，在访问时把命名删除掉。")]),e._v(" "),r("h3",{attrs:{id:"_2-4-changeorigin"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-4-changeorigin"}},[e._v("#")]),e._v(" 2.4 changeOrigin")]),e._v(" "),r("p",[e._v("这个参数可以让target参数是域名。")]),e._v(" "),r("h3",{attrs:{id:"_2-5-secure"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-5-secure"}},[e._v("#")]),e._v(" 2.5 secure")]),e._v(" "),r("p",[e._v("secure: false,不检查安全问题。\n设置后，可以接受运行在 HTTPS 上，可以使用无效证书的后端服务器")]),e._v(" "),r("h3",{attrs:{id:"_2-6-其他参数配置查看http-proxy-middleware文档"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-6-其他参数配置查看http-proxy-middleware文档"}},[e._v("#")]),e._v(" 2.6 其他参数配置查看http-proxy-middleware文档")]),e._v(" "),r("p",[e._v("其他的配置参数等信息，"),r("a",{attrs:{href:"https://github.com/chimurai/http-proxy-middleware",target:"_blank",rel:"noopener noreferrer"}},[e._v("可以查看这里"),r("OutboundLink")],1)]),e._v(" "),r("h2",{attrs:{id:"_3-参考资料"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-参考资料"}},[e._v("#")]),e._v(" 3. 参考资料")]),e._v(" "),r("p",[e._v("webpack-dev-server： "),r("a",{attrs:{href:"https://github.com/webpack/webpack-dev-server",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://github.com/webpack/we..."),r("OutboundLink")],1),r("br"),e._v("\nhttp-proxy-middleware： "),r("a",{attrs:{href:"https://github.com/chimurai/http-proxy-middleware",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://github.com/chimurai/h..."),r("OutboundLink")],1),r("br"),e._v(" "),r("a",{attrs:{href:"https://webpack.docschina.org/configuration/dev-server/#devserver-proxy",target:"_blank",rel:"noopener noreferrer"}},[e._v("webpack官网 devServer.proxy配置"),r("OutboundLink")],1)])])}),[],!1,null,null,null);t.default=s.exports}}]);