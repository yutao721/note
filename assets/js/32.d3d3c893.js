(window.webpackJsonp=window.webpackJsonp||[]).push([[32],{378:function(t,e,r){"use strict";r.r(e);var o=r(43),i=Object(o.a)({},(function(){var t=this,e=t.$createElement,r=t._self._c||e;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h2",{attrs:{id:"redux-toolkit-rtk-使用介绍以及源码分析"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#redux-toolkit-rtk-使用介绍以及源码分析"}},[t._v("#")]),t._v(" Redux Toolkit(RTK)使用介绍以及源码分析")]),t._v(" "),r("p",[t._v("React和Redux被认为是大规模React应用中管理状态的最佳组合。然而，随着时间的推移，Redux的在使用过程中还是会遇到以下问题：")]),t._v(" "),r("ul",[r("li",[t._v("配置Redux Store并不简单。")]),t._v(" "),r("li",[t._v("我们需要几个软件包来使Redux与React一起工作。")]),t._v(" "),r("li",[t._v("Redux需要太多样板代码。")])]),t._v(" "),r("h2",{attrs:{id:"redux-toolkit解决的问题"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#redux-toolkit解决的问题"}},[t._v("#")]),t._v(" Redux Toolkit解决的问题")]),t._v(" "),r("p",[t._v("Redux Toolkit(之前称为Redux Starter Kit)提供了一些选项来配置全局store，并通过尽可能地抽象Redux API来更精简地创建动作和reducers。")]),t._v(" "),r("h2",{attrs:{id:"redux-toolkit-api的主要功能"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#redux-toolkit-api的主要功能"}},[t._v("#")]),t._v(" Redux Toolkit API的主要功能")]),t._v(" "),r("p",[t._v("以下是Redux Took Kit使用的API函数，它是现有Redux API函数的抽象。这些函数并没有改变Redux的流程，只是以更易读和管理的方式简化了它们。")]),t._v(" "),r("ul",[r("li",[r("strong",[t._v("configureStore")]),t._v("：像从Redux中创建原始的createStore一样创建一个Redux store实例，但接受一个命名的选项对象并自动设置Redux DevTools扩展。")]),t._v(" "),r("li",[r("strong",[t._v("createAction")]),t._v("：接受一个Action类型字符串，并返回一个使用该类型的Action创建函数。")]),t._v(" "),r("li",[r("strong",[t._v("createReducer")]),t._v("：接受初始状态值和Action类型的查找表到reducer函数，并创建一个处理所有Action类型的reducer。")]),t._v(" "),r("li",[r("strong",[t._v("createSlice")]),t._v("：接受一个初始状态和一个带有reducer名称和函数的查找表，并自动生成action creator函数、action类型字符串和一个reducer函数。")]),t._v(" "),r("li",[t._v("...")])])])}),[],!1,null,null,null);e.default=i.exports}}]);